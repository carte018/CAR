#!/bin/bash

parse_args() {
  POSITIONAL=()
  while [[ $# -gt 0 ]]
  do
    key="$1"
    case "$key" in
        -q)
                QUIET=yes
                shift
                ;;
 		-d)
 				DATABASE=yes
 				shift
 				;;
         *)
         		shift
         		;;
    esac
  done
  set -- "${POSITIONAL[@]}"
}

QUIET=no
DATABASE=no

parse_args $*


# 
# If we have a previously-configured arpsi config, start with its defaults
# as ours, overridden by our own config.prev file.
#

if [ -f ../arpsinode/config.prev ]
then
    source ../arpsinode/config.prev
fi


#
# if the config.prev file exists, load it
#

if [ -f config.prev ]
then
    source config.prev
fi

#
# Overload the institution name setting 
#
inst_log=$institution_name

#
# if we were called with the -q flag, don't ask questions, otherwise do
#

if [ "$QUIET" != "yes" ]
then
  # Ask some questions
  #

  if [ $SKUNKWORKS == "yes" ]
  then
    echo "Skunkworks builds use Castle Amber as the fictional setting for their operations."
    institution_name="Castle Amber"
    inst_long="Castle Amber"
  else
    echo "The CARMA occasionally has to resort to a pre-configured name by"
    echo "which to refer to your institution as a whole when conveying to"
    echo "end users details of consent transactions.  At Duke University,"
    echo "for example, we use the string 'Duke University' for this purpose."
    echo "Enter the name to use to identify your institution to users of your"
    echo "CARMA. [$institution_name]: "
    read im
    if [ -n "$im" ]
    then
      institution_name="$im"
      inst_long="$im"
    fi
  fi
  
  if [ $SKUNKWORKS == "yes" ]
  then
    echo "Skunkworks builds use Amber as the short name for the organization."
    institution_short_name="Amber"
    inst_short="Amber"
  else
    echo "The CARMA likewise sometimes needs a short form of the institutional name to"
    echo "use in building UI components.  Here at Duke University, we use simply \"Duke\"," 
    echo "but other institutions may prefer an acronym or a different sort of shortened name."
    echo "Enter the name to use for your institution in these cases.  [$inst_short]: "
    read is
    if [ -n "$is" ]
    then
       inst_short="$is"
    fi
  fi
  
  if [ $SKUNKWORKS == "yes" ]
  then
    echo "Skunkworks builds use the built-in Amber icon."
    ilogo_url="/amber_logo.png"
  else
    echo "To customize the banners on pages the CARMA generates, we need an institutional logo."
    echo "This logo needs to be an image -- PNG, for example -- that can be retrieved by users"
    echo "browsers at a well-known URL.  It may be a simple image of the name of the institution"
    echo "or a more pictorial logo.  It will appear in the top header"
    echo "of user-facing web pages generated by the system. Enter the URL for the icon you wish"
    echo "to use. [$ilogo_url]"
    read iu
    if [ -n "$iu" ]
    then
      ilogo_url="$iu"
    fi 
  fi
fi
echo
echo
echo "We will now rebuild the templated configuration files."
echo
echo

cat docker-compose.yml.tmpl | sed 's/%inst_long%/'"$inst_long"'/g' | sed 's/%inst_short%/'"$inst_short"'/g' | sed 's^%ilogo_url%^'$ilogo_url'^g' > docker-compose.yml

echo
echo "Registering SSL certificate trusts"
echo
cp ../apache-sp/ssl.pem ./ssl.pem


echo "Saving configuration for later reuse"
echo
echo "krb_default_realm=$krb_default_realm" > config.prev
echo "kdc_fqdn_1=$kdc_fqdn_1" >> config.prev
echo "kdc_fqdn_2=$kdc_fqdn_2" >> config.prev
echo "kdc_fqdn_3=$kdc_fqdn_3" >> config.prev
echo "kdc_fqdn_admin=$kdc_fqdn_admin" >> config.prev
echo "basicauth_class=$basicauth_class" >> config.prev
echo "app_users=$app_users" >> config.prev
echo "app_admins=$app_admins" >> config.prev
echo "carma_user=$CARMA_USER" >> config.prev
echo "carma_password=$CARMA_PASSWORD" >> config.prev
echo "institution_name=$institution_name" >> config.prev
echo "super_admins=$super_admins">>config.prev
echo "Done."
echo "Your saved configuration options are available in the file config.prev in the car directory."
echo

